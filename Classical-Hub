--Basic Variables
local localplayer = game:GetService("Players").LocalPlayer
local players  = game:GetService("Players")
local Players  = game:GetService("Players")

-- Hotel Elephant
if game.PlaceId == 23578803 then

-- UI
    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
    local Window = Library.CreateLib("Classical Hub", "DarkTheme")
    local Tab = Window:NewTab("Money")
    local Tab2 = Window:NewTab("Trolling")
    local Tab4 = Window:NewTab("Credits")
    local Section = Tab:NewSection("Give Yourself Money:")
    local Section2 = Tab:NewSection("Give Someone Else Money:")
    local Section3 = Tab2:NewSection("Negative Money:")
    local Section4 = Tab2:NewSection("Room Stealer:")
    local Section5 = Tab4:NewSection("Credits:")
-- Tab 1 (Money)
local plrToFire

Section:NewTextBox("Amount:", "Give Yourself A Desired Amount Of Money!", function(money)
	local args = {
        [1] = false,
        [2] = tonumber(money),
        [3] = "Cash"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("MoneyRequest"):FireServer(unpack(args))
end)

--DropDown Code
local plrs = cloneref(game:GetService("Players"))
local RunService = cloneref(game:GetService("RunService"))
local RealPlayers = plrs:GetPlayers()

local playerNames = {}  -- Create a table to hold player names

for _, player in ipairs(RealPlayers) do
    table.insert(playerNames, player.Name)
end

local NewDropdown = Section2:NewDropdown("Who:", "Who You Want To Give Money To", playerNames, function(currentOption)
    plrToFire = currentOption
    warn(plrToFire)
end)

--End DropDown Code
Section2:NewTextBox("Amount:", "Give Someone Else A Desired Amount Of Money!", function(money)
    local args = {
        [1] = false,
        [2] = tonumber(money),
        [3] = "Cash",
        [4] = game:GetService("Players"):WaitForChild(plrToFire)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("MoneyRequest"):FireServer(unpack(args))
end)

--Tab 2 (Trolling)
Section3:NewButton("Give Everyone Negative Money!", "Gives Everyone (Including Youself) Negative Money!", function()
    for i, plr in pairs(Players:GetPlayers()) do
        local args = {
            [1] = false,
            [2] = 10000000000000000000,
            [3] = "Cash",
            [4] = plr
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("MoneyRequest"):FireServer(unpack(args))
	end
end)

Section4:NewDropdown("Which Room?", "Which Room Would You Like To Steal?", {"Room 1", "Room 2", "Room 3", "Room 4", "Room 5", "Room 6", "Room 7", "Room 8"}, function(currentOption)
    if currentOption == "Room 1" then
        local args = {
            [1] = true
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
        
        local args = {
            [1] = false,
            [2] = "Room 1"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
    end
    if currentOption == "Room 2" then
        local args = {
            [1] = true
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
        
        local args = {
            [1] = false,
            [2] = "Room 2"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
    end
    if currentOption == "Room 3" then
        local args = {
            [1] = true
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
        
        local args = {
            [1] = false,
            [2] = "Room 3"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
    end
    if currentOption == "Room 4" then
        local args = {
            [1] = true
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
        
        local args = {
            [1] = false,
            [2] = "Room 4"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
    end
    if currentOption == "Room 5" then
        local args = {
            [1] = true
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
        
        local args = {
            [1] = false,
            [2] = "Room 5"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
    end
    if currentOption == "Room 6" then
        local args = {
            [1] = true
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
        
        local args = {
            [1] = false,
            [2] = "Room 6"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
    end
    if currentOption == "Room 7" then
        local args = {
            [1] = true
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
        
        local args = {
            [1] = false,
            [2] = "Room 7"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
    end
    if currentOption == "Room 8" then
        local args = {
            [1] = true
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
        
        local args = {
            [1] = false,
            [2] = "Room 8"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RoomGiver"):FireServer(unpack(args))
    end
end)

--Tab 3 (Credits)
Section5:NewButton("Owner/Main Scripter: Classic", "Click To Copy Discord Username", function()
    setclipboard("volars")
end)

--DropDown Refresher
plrs.PlayerAdded:Connect(function(player)
    table.insert(RealPlayers, player)
    table.insert(playerNames, player.Name)
    NewDropdown:Refresh(playerNames)
end)

plrs.PlayerRemoving:Connect(function(player)
    table.remove(RealPlayers, player)
    for i, playerName in ipairs(playerNames) do
        if playerName == player.Name then
            table.remove(playerNames, i)
            break
        end
    end
    NewDropdown:Refresh(playerNames)

--End Refresher
end)
end
